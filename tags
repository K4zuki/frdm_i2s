!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BitClk_d	FrdmI2s.h	/^    bool WordSelect_d, BitClk_d, MasterClk_d;$/;"	m	class:FrdmI2s
FrdmI2s	FrdmI2s.h	/^class FrdmI2s {$/;"	c
FrdmI2s	k64f.cpp	/^FrdmI2s::FrdmI2s(bool rxtx, PinName SerialData, PinName WordSelect, PinName BitClk) {$/;"	f	class:FrdmI2s
FrdmI2s	k66f.cpp	/^FrdmI2s::FrdmI2s(bool rxtx, PinName SerialData, PinName WordSelect, PinName BitClk) {$/;"	f	class:FrdmI2s
I2SRXISR	FrdmI2s.h	/^    static FunctionPointer I2SRXISR;$/;"	m	class:FrdmI2s
I2SRXISR	k64f.cpp	/^FunctionPointer FrdmI2s::I2SRXISR;$/;"	m	class:FrdmI2s	file:
I2SRXISR	k66f.cpp	/^FunctionPointer FrdmI2s::I2SRXISR;$/;"	m	class:FrdmI2s	file:
I2STXISR	FrdmI2s.h	/^    static FunctionPointer I2STXISR;$/;"	m	class:FrdmI2s
I2STXISR	k64f.cpp	/^FunctionPointer FrdmI2s::I2STXISR;$/;"	m	class:FrdmI2s	file:
I2STXISR	k66f.cpp	/^FunctionPointer FrdmI2s::I2STXISR;$/;"	m	class:FrdmI2s	file:
I2S_3WIRE	FrdmI2s.h	56;"	d
I2S_4WIRE	FrdmI2s.h	55;"	d
I2S_CONFIG_BITS_IN_A_WORD	k64f.cpp	535;"	d	file:
I2S_CONFIG_BITS_IN_A_WORD	k66f.cpp	535;"	d	file:
I2S_CONFIG_WORDS_IN_A_FRAME	k64f.cpp	534;"	d	file:
I2S_CONFIG_WORDS_IN_A_FRAME	k66f.cpp	534;"	d	file:
I2S_DF_INTERRUPT_FIFO_LEVEL	k64f.cpp	26;"	d	file:
I2S_DF_INTERRUPT_FIFO_LEVEL	k66f.cpp	26;"	d	file:
I2S_DF_MASTERSLAVE	k64f.cpp	23;"	d	file:
I2S_DF_MASTERSLAVE	k66f.cpp	23;"	d	file:
I2S_DF_MUTED	k64f.cpp	25;"	d	file:
I2S_DF_MUTED	k66f.cpp	25;"	d	file:
I2S_DF_SAMPLERATE	k64f.cpp	22;"	d	file:
I2S_DF_SAMPLERATE	k66f.cpp	22;"	d	file:
I2S_DF_STEREOMONO	k64f.cpp	24;"	d	file:
I2S_DF_STEREOMONO	k66f.cpp	24;"	d	file:
I2S_DF_WORDWIDTH	k64f.cpp	21;"	d	file:
I2S_DF_WORDWIDTH	k66f.cpp	21;"	d	file:
I2S_H	FrdmI2s.h	41;"	d
I2S_MASTER	FrdmI2s.h	46;"	d
I2S_MAX_BITRATE_DIV	k64f.cpp	30;"	d	file:
I2S_MAX_BITRATE_DIV	k66f.cpp	30;"	d	file:
I2S_MAX_DENOMINATOR	k64f.cpp	28;"	d	file:
I2S_MAX_DENOMINATOR	k66f.cpp	28;"	d	file:
I2S_MAX_NUMERATOR	k64f.cpp	29;"	d	file:
I2S_MAX_NUMERATOR	k66f.cpp	29;"	d	file:
I2S_MONO	FrdmI2s.h	50;"	d
I2S_MUTED	FrdmI2s.h	52;"	d
I2S_PCLK_RATE	k64f.cpp	32;"	d	file:
I2S_PCLK_RATE	k66f.cpp	32;"	d	file:
I2S_RECEIVE	FrdmI2s.h	44;"	d
I2S_SLAVE	FrdmI2s.h	47;"	d
I2S_STEREO	FrdmI2s.h	49;"	d
I2S_TRANSMIT	FrdmI2s.h	43;"	d
I2S_UNMUTED	FrdmI2s.h	53;"	d
MasterClk_d	FrdmI2s.h	/^    bool WordSelect_d, BitClk_d, MasterClk_d;$/;"	m	class:FrdmI2s
WordSelect_d	FrdmI2s.h	/^    bool WordSelect_d, BitClk_d, MasterClk_d;$/;"	m	class:FrdmI2s
_BitClk	FrdmI2s.h	/^    PinName _SerialData, _WordSelect, _BitClk, _MasterClk;$/;"	m	class:FrdmI2s
_MasterClk	FrdmI2s.h	/^    PinName _SerialData, _WordSelect, _BitClk, _MasterClk;$/;"	m	class:FrdmI2s
_SerialData	FrdmI2s.h	/^    PinName _SerialData, _WordSelect, _BitClk, _MasterClk;$/;"	m	class:FrdmI2s
_WordSelect	FrdmI2s.h	/^    PinName _SerialData, _WordSelect, _BitClk, _MasterClk;$/;"	m	class:FrdmI2s
_i2s_init	k64f.cpp	/^void FrdmI2s::_i2s_init(void) {$/;"	f	class:FrdmI2s
_i2s_init	k66f.cpp	/^void FrdmI2s::_i2s_init(void) {$/;"	f	class:FrdmI2s
_i2s_set_rate	k64f.cpp	/^void FrdmI2s::_i2s_set_rate(int smprate) {$/;"	f	class:FrdmI2s
_i2s_set_rate	k66f.cpp	/^void FrdmI2s::_i2s_set_rate(int smprate) {$/;"	f	class:FrdmI2s
_i2sisr	k64f.cpp	/^void FrdmI2s::_i2sisr(void) {$/;"	f	class:FrdmI2s
_i2sisr	k66f.cpp	/^void FrdmI2s::_i2sisr(void) {$/;"	f	class:FrdmI2s
_rxtx	FrdmI2s.h	/^    bool _rxtx;$/;"	m	class:FrdmI2s
_set_clock_112896	k64f.cpp	/^void FrdmI2s::_set_clock_112896(void) {$/;"	f	class:FrdmI2s
_set_clock_112896	k66f.cpp	/^void FrdmI2s::_set_clock_112896(void) {$/;"	f	class:FrdmI2s
_set_clock_122800	k64f.cpp	/^void FrdmI2s::_set_clock_122800(void) {$/;"	f	class:FrdmI2s
_set_clock_122800	k66f.cpp	/^void FrdmI2s::_set_clock_122800(void) {$/;"	f	class:FrdmI2s
attach	FrdmI2s.h	/^    void attach(T *tptr, void (T::*mptr)(void)) {$/;"	f	class:FrdmI2s
attach	FrdmI2s.h	/^    void attach(void (*fptr)(void)) {$/;"	f	class:FrdmI2s
deallocating	FrdmI2s.h	/^    bool deallocating;$/;"	m	class:FrdmI2s
defaulter	k64f.cpp	/^void FrdmI2s::defaulter() {$/;"	f	class:FrdmI2s
defaulter	k66f.cpp	/^void FrdmI2s::defaulter() {$/;"	f	class:FrdmI2s
fifo_level	k64f.cpp	/^int FrdmI2s::fifo_level() {$/;"	f	class:FrdmI2s
fifo_level	k66f.cpp	/^int FrdmI2s::fifo_level() {$/;"	f	class:FrdmI2s
fifo_points	k64f.cpp	/^int FrdmI2s::fifo_points() {$/;"	f	class:FrdmI2s
fifo_points	k66f.cpp	/^int FrdmI2s::fifo_points() {$/;"	f	class:FrdmI2s
fourwire	FrdmI2s.h	/^    bool fourwire;$/;"	m	class:FrdmI2s
freq	FrdmI2s.h	/^    int freq;$/;"	m	class:FrdmI2s
frequency	k64f.cpp	/^void FrdmI2s::frequency(int desired_freq) {$/;"	f	class:FrdmI2s
frequency	k66f.cpp	/^void FrdmI2s::frequency(int desired_freq) {$/;"	f	class:FrdmI2s
interrupt_fifo_level	FrdmI2s.h	/^    int interrupt_fifo_level;$/;"	m	class:FrdmI2s
master	FrdmI2s.h	/^    bool master;$/;"	m	class:FrdmI2s
masterslave	k64f.cpp	/^void FrdmI2s::masterslave(bool mastermode) {$/;"	f	class:FrdmI2s
masterslave	k66f.cpp	/^void FrdmI2s::masterslave(bool mastermode) {$/;"	f	class:FrdmI2s
max_fifo_points	k64f.cpp	/^int FrdmI2s::max_fifo_points() {$/;"	f	class:FrdmI2s
max_fifo_points	k66f.cpp	/^int FrdmI2s::max_fifo_points() {$/;"	f	class:FrdmI2s
mclk_en	FrdmI2s.h	/^    bool mclk_en;$/;"	m	class:FrdmI2s
mclk_freq	k64f.cpp	/^void FrdmI2s::mclk_freq(int freq) {$/;"	f	class:FrdmI2s
mclk_freq	k66f.cpp	/^void FrdmI2s::mclk_freq(int freq) {$/;"	f	class:FrdmI2s
mclk_frequency	FrdmI2s.h	/^    int mclk_frequency;$/;"	m	class:FrdmI2s
mute	k64f.cpp	/^void FrdmI2s::mute() {$/;"	f	class:FrdmI2s
mute	k64f.cpp	/^void FrdmI2s::mute(bool mute_en) {$/;"	f	class:FrdmI2s
mute	k66f.cpp	/^void FrdmI2s::mute() {$/;"	f	class:FrdmI2s
mute	k66f.cpp	/^void FrdmI2s::mute(bool mute_en) {$/;"	f	class:FrdmI2s
muted	FrdmI2s.h	/^    bool muted;$/;"	m	class:FrdmI2s
old_bitrate_div	FrdmI2s.h	/^    int old_bitrate_div;$/;"	m	class:FrdmI2s
old_freq	FrdmI2s.h	/^    int old_freq;$/;"	m	class:FrdmI2s
old_pre_den	FrdmI2s.h	/^    int old_pre_den;$/;"	m	class:FrdmI2s
old_pre_num	FrdmI2s.h	/^    int old_pre_num;$/;"	m	class:FrdmI2s
pin_setup	k64f.cpp	/^void FrdmI2s::pin_setup() {$/;"	f	class:FrdmI2s
pin_setup	k66f.cpp	/^void FrdmI2s::pin_setup() {$/;"	f	class:FrdmI2s
pin_setup_err	FrdmI2s.h	/^    int pin_setup_err;$/;"	m	class:FrdmI2s
power	k64f.cpp	/^void FrdmI2s::power(bool pwr) {$/;"	f	class:FrdmI2s
power	k66f.cpp	/^void FrdmI2s::power(bool pwr) {$/;"	f	class:FrdmI2s
pwr	FrdmI2s.h	/^    bool pwr;$/;"	m	class:FrdmI2s
read	k64f.cpp	/^int FrdmI2s::read() { return I2S0->RDR[0]; }$/;"	f	class:FrdmI2s
read	k64f.cpp	/^void FrdmI2s::read(char buf[], int len) {$/;"	f	class:FrdmI2s
read	k64f.cpp	/^void FrdmI2s::read(int buf[], int len) {$/;"	f	class:FrdmI2s
read	k64f.cpp	/^void FrdmI2s::read(int bufr[], int bufl[], int len) {$/;"	f	class:FrdmI2s
read	k66f.cpp	/^int FrdmI2s::read() { return I2S0->RDR[0]; }$/;"	f	class:FrdmI2s
read	k66f.cpp	/^void FrdmI2s::read(char buf[], int len) {$/;"	f	class:FrdmI2s
read	k66f.cpp	/^void FrdmI2s::read(int buf[], int len) {$/;"	f	class:FrdmI2s
read	k66f.cpp	/^void FrdmI2s::read(int bufr[], int bufl[], int len) {$/;"	f	class:FrdmI2s
reg_write_err	FrdmI2s.h	/^    int reg_write_err;$/;"	m	class:FrdmI2s
rxisr	FrdmI2s.h	/^    static bool rxisr;$/;"	m	class:FrdmI2s
rxisr	k64f.cpp	/^bool FrdmI2s::rxisr;$/;"	m	class:FrdmI2s	file:
rxisr	k66f.cpp	/^bool FrdmI2s::rxisr;$/;"	m	class:FrdmI2s	file:
set_interrupt_fifo_level	k64f.cpp	/^void FrdmI2s::set_interrupt_fifo_level(int level) {$/;"	f	class:FrdmI2s
set_interrupt_fifo_level	k66f.cpp	/^void FrdmI2s::set_interrupt_fifo_level(int level) {$/;"	f	class:FrdmI2s
setup_ok	k64f.cpp	/^bool FrdmI2s::setup_ok() {$/;"	f	class:FrdmI2s
setup_ok	k66f.cpp	/^bool FrdmI2s::setup_ok() {$/;"	f	class:FrdmI2s
start	k64f.cpp	/^void FrdmI2s::start() {$/;"	f	class:FrdmI2s
start	k66f.cpp	/^void FrdmI2s::start() {$/;"	f	class:FrdmI2s
stereo	FrdmI2s.h	/^    bool stereo;$/;"	m	class:FrdmI2s
stereomono	k64f.cpp	/^void FrdmI2s::stereomono(bool stereomode) {$/;"	f	class:FrdmI2s
stereomono	k66f.cpp	/^void FrdmI2s::stereomono(bool stereomode) {$/;"	f	class:FrdmI2s
stop	k64f.cpp	/^void FrdmI2s::stop() {$/;"	f	class:FrdmI2s
stop	k66f.cpp	/^void FrdmI2s::stop() {$/;"	f	class:FrdmI2s
stopped	FrdmI2s.h	/^    bool stopped;$/;"	m	class:FrdmI2s
txisr	FrdmI2s.h	/^    static bool txisr;$/;"	m	class:FrdmI2s
txisr	k64f.cpp	/^bool FrdmI2s::txisr;$/;"	m	class:FrdmI2s	file:
txisr	k66f.cpp	/^bool FrdmI2s::txisr;$/;"	m	class:FrdmI2s	file:
wordsize	k64f.cpp	/^void FrdmI2s::wordsize(int words) {$/;"	f	class:FrdmI2s
wordsize	k66f.cpp	/^void FrdmI2s::wordsize(int words) {$/;"	f	class:FrdmI2s
wordwidth	FrdmI2s.h	/^    int wordwidth;$/;"	m	class:FrdmI2s
wordwidth_code	FrdmI2s.h	/^    char wordwidth_code;$/;"	m	class:FrdmI2s
write	k64f.cpp	/^void FrdmI2s::write(char buf[], int len) {$/;"	f	class:FrdmI2s
write	k64f.cpp	/^void FrdmI2s::write(int buf[], int len) {$/;"	f	class:FrdmI2s
write	k64f.cpp	/^void FrdmI2s::write(int bufr[], int bufl[], int len) {$/;"	f	class:FrdmI2s
write	k66f.cpp	/^void FrdmI2s::write(char buf[], int len) {$/;"	f	class:FrdmI2s
write	k66f.cpp	/^void FrdmI2s::write(int buf[], int len) {$/;"	f	class:FrdmI2s
write	k66f.cpp	/^void FrdmI2s::write(int bufr[], int bufl[], int len) {$/;"	f	class:FrdmI2s
write_registers	k64f.cpp	/^void FrdmI2s::write_registers() {$/;"	f	class:FrdmI2s
write_registers	k66f.cpp	/^void FrdmI2s::write_registers() {$/;"	f	class:FrdmI2s
~I2S	k64f.cpp	/^FrdmI2s::~I2S() {$/;"	f	class:FrdmI2s
~I2S	k66f.cpp	/^FrdmI2s::~I2S() {$/;"	f	class:FrdmI2s
